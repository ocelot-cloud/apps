package main

import "github.com/stretchr/testify/mock"

// DockerHubClientMock is an autogenerated mock type for the DockerHubClient interface.
type DockerHubClientMock struct{ mock.Mock }

func NewDockerHubClientMock(t mock.TestingT) *DockerHubClientMock {
	m := &DockerHubClientMock{}
	m.Mock.Test(t)
	return m
}

func (m *DockerHubClientMock) listImageTags(image string) ([]string, error) {
	args := m.Called(image)
	var tags []string
	if res := args.Get(0); res != nil {
		tags = res.([]string)
	}
	return tags, args.Error(1)
}

// FileSystemOperatorMock is an autogenerated mock type for the FileSystemOperator interface.
type FileSystemOperatorMock struct{ mock.Mock }

func NewFileSystemOperatorMock(t mock.TestingT) *FileSystemOperatorMock {
	m := &FileSystemOperatorMock{}
	m.Mock.Test(t)
	return m
}

func (m *FileSystemOperatorMock) GetListOfApps(appsDir string) ([]string, error) {
	args := m.Called(appsDir)
	var apps []string
	if res := args.Get(0); res != nil {
		apps = res.([]string)
	}
	return apps, args.Error(1)
}

func (m *FileSystemOperatorMock) GetPortOfApp(appDir string) (string, error) {
	args := m.Called(appDir)
	return args.String(0), args.Error(1)
}

func (m *FileSystemOperatorMock) InjectPortInDockerCompose(appDir string) error {
	return m.Called(appDir).Error(0)
}

func (m *FileSystemOperatorMock) RunInjectedDockerCompose(appDir string) error {
	return m.Called(appDir).Error(0)
}

func (m *FileSystemOperatorMock) GetImagesOfApp(appDir string) ([]Service, error) {
	args := m.Called(appDir)
	var services []Service
	if res := args.Get(0); res != nil {
		services = res.([]Service)
	}
	return services, args.Error(1)
}

func (m *FileSystemOperatorMock) WriteNewTagToDockerCompose(appDir, serviceName, newTag string) error {
	return m.Called(appDir, serviceName, newTag).Error(0)
}

// EndpointCheckerMock is an autogenerated mock type for the EndpointChecker interface.
type EndpointCheckerMock struct{ mock.Mock }

func NewEndpointCheckerMock(t mock.TestingT) *EndpointCheckerMock {
	m := &EndpointCheckerMock{}
	m.Mock.Test(t)
	return m
}

func (m *EndpointCheckerMock) TryAccessingIndexPageOnLocalhost(port string) error {
	return m.Called(port).Error(0)
}
